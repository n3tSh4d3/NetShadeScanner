#!/bin/python3

# dependency check for the modules
try: 
	import os
	import subprocess
	import sys
	import re
	from colorama import Fore, Back, Style
	import fileinput
	import requests
	from urllib.request import urlopen
	from urllib.error import *
	from datetime import datetime
except ModuleNotFoundError:
	print('run the requirements.txt file to have all the requirements satisfied')



print(Fore.RED + '''


 ______  _______ _______ _______ _______  ______ _ _______ 
(______)(_______|_______|_______|_______)/ _____) (_______)
 _     _ _____   _____   _____   _     _( (____ | |_     _ 
| |   | |  ___) |  ___) |  ___) | |   | |\____ \| | |   | |
| |__/ /| |_____| |     | |_____| |   | |_____) ) | |___| |
|_____/ |_______)_|     |_______)_|   |_(______/|_|\_____/ 
                                                           
                                                                                                                                                                                       
╔═╗┬ ┬┌┬┐┌─┐┌┬┐┌─┐┌┬┐┬┌─┐  ╔═╗┌─┐┌─┐┌┐┌┌┐┌┌─┐┬─┐
╠═╣│ │ │ │ ││││├─┤ │ ││    ╚═╗│  ├─┤││││││├┤ ├┬┘
╩ ╩└─┘ ┴ └─┘┴ ┴┴ ┴ ┴ ┴└─┘  ╚═╝└─┘┴ ┴┘└┘┘└┘└─┘┴└─
	
	''')

print(Fore.GREEN + '''
Autor:
Fidemsrl.it
	''' + Style.RESET_ALL
	)
#print()
# check dependencies

print("Enter the target of the net scan: (es.192.168.1.0)")

# check for index input
try:
	var_1 = input()

except IndexError:
	print('Put a valid switch or use -h switch to see the list of options')

print("Enter the subnet of the net scan: (24)")

# check for index input
try:
	var_2 = input()

except IndexError:
	print('Put a valid switch or use -h switch to see the list of options')


var_nmap=var_1+"/"+var_2

	
time_string = datetime.now().strftime("%d_%m_%Y_%H_%M_%S")
repDir = "Report_"+var_1+"_"+var_2+"_at_"+time_string
cmd = subprocess.run(["mkdir",repDir])


####### enter the Network-scanner ########
print("Do you want to do a quick scan (not port scanner)? (Y/N)")

fast = input()

if (fast == 'Y'):
	print(Fore.RED + '''
Start Fast Scan Mode
	
	'''+ Style.RESET_ALL)
	try:
		#Fast Scan
		cmd = subprocess.run(["nmap","-sn",var_nmap,"-oX",repDir+"/Fast_Scan_Nmap_"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Fast_Scan_Nmap_XLS"+var_1+".xls",repDir+"/Fast_Scan_Nmap_"+var_1+".xml"])
		cmd = subprocess.run(["./nmap2svg.py",repDir+"/Fast_Scan_Nmap_"+var_1+".xml"])

	except KeyboardInterrupt:
		sys.exit()
		
print("Do you want to do a deep network scan? (Y/N)")
	
deep =input()

if (deep == 'Y'):
	print(Fore.RED + '''
Start Deep Network Scan Mode
	
	'''+ Style.RESET_ALL)
	print("Deep Network Scan mode; Do you want use -Pn option ? (Y/N)")

	pn = input()
	if (pn == 'Y'):
		try:
			#SCANNER NP mode NOT evasion mode
			cmd = subprocess.run(["nmap","-Pn","-p-", "-A", "-T4",var_nmap,"-oX",repDir+"/Nmap_"+var_1+".xml"])
			cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_XLS"+var_1+".xls",repDir+"/Nmap_"+var_1+".xml"])

		except KeyboardInterrupt:
			sys.exit()
	
	#else of the scanner if
	elif (pn != 'Y'):
		try:
			#SCANNER NP mode NOT evasion mode
			cmd = subprocess.run(["nmap","-p-", "-A", "-T4",var_nmap,"-oX",repDir+"/Nmap_"+var_1+".xml"])
			cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_XLS"+var_1+".xls",repDir+"/Nmap_"+var_1+".xml"])

		except KeyboardInterrupt:
			sys.exit()

####### enter the Network-scanner EVASION MODE ######## 

print('''
Do you want to use IDS / FireWall evasion mode?(Y/N)
NOTE:The scanner will perform multiple scans using different firewall / IDS evasion methods
''')

evasion = input()

if (evasion == 'Y'):
	print(Fore.RED + '''
Start Evasion IDS/Firewall Scan Mode
	
	'''+ Style.RESET_ALL)
	try:
		#SCANNER evasion mode
		print(Fore.RED +'''
---Fragmentary mode
		'''+ Style.RESET_ALL)
		cmd = subprocess.run(["nmap","-f",var_nmap,"-oX",repDir+"/Nmap_evasion_mode_frag"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_evasion_mode_frag_XLS"+var_1+".xls",repDir+"/Nmap_evasion_mode_frag"+var_1+".xml"])
		print(Fore.RED +'''
---Badsum mode
		'''+ Style.RESET_ALL)
		cmd = subprocess.run(["nmap","--badsum",var_nmap,"-oX",repDir+"/Nmap_evasion_mode_badsum"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_evasion_mode_badsum_XLS"+var_1+".xls",repDir+"/Nmap_evasion_mode_badsum"+var_1+".xml"])
		print(Fore.RED +'''
---Data length mode
		'''+ Style.RESET_ALL)
		cmd = subprocess.run(["nmap","--data-length",var_nmap,"-oX",repDir+"/Nmap_evasion_mode_data_length"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_evasion_mode_data_length_XLS"+var_1+".xls",repDir+"/Nmap_evasion_mode_data_length"+var_1+".xml"])
		print(Fore.RED +'''
---Decoy mode
		'''+ Style.RESET_ALL)
		cmd = subprocess.run(["nmap","-D RND:5",var_nmap,"-oX",repDir+"/Nmap_evasion_mode_decoy_random"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_evasion_mode_decoy_random_XLS"+var_1+".xls",repDir+"/Nmap_evasion_mode_decoy_random"+var_1+".xml"])
		print(Fore.RED +'''
---Source port DNS mode
		'''+ Style.RESET_ALL)
		cmd = subprocess.run(["nmap","--source-port 53",var_nmap,"-oX",repDir+"/Nmap_evasion_mode_source_port_53"+var_1+".xml"])
		cmd = subprocess.run(["./nmap-converter.py","-o",repDir+"/Nmap_evasion_mode_source_port_53_XLS"+var_1+".xls",repDir+"/Nmap_evasion_mode_source_port_53"+var_1+".xml"])
	except KeyboardInterrupt:
		sys.exit()
else:
	print('''The network scan is finished! The reports are in the folder named with the network address and the scan start date and time.''')
